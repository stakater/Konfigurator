name: Pull Request

on:
  pull_request:
    branches:
      - master

env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.17.7
  CONTAINER_REGISTRY_URL: ghcr.io/stakater

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.sha}}

    - name: Set up Go
      id: go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint and test
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.2
        golangci-lint run --timeout=10m ./...
        make test

    - name: Generate Tag
      id: generate_tag
      run: |
        sha=${{ github.event.pull_request.head.sha }}
        tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
        echo "##[set-output name=GIT_TAG;]$(echo ${tag})"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ env.CONTAINER_REGISTRY_URL }}/${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    # To identify any broken changes in dockerfiles or dependencies
    - name: Build image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: false
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.revision=${{ github.sha }}
